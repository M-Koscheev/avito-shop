basePath: /api
definitions:
  db.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  db.AuthResponse:
    properties:
      token:
        type: string
    type: object
  db.ErrorResponse:
    properties:
      errors:
        type: string
    type: object
  db.InfoResponse:
    properties:
      coinHistory:
        properties:
          received:
            items:
              properties:
                amount:
                  type: integer
                fromUser:
                  type: string
              type: object
            type: array
          sent:
            items:
              properties:
                amount:
                  type: integer
                toUser:
                  type: string
              type: object
            type: array
        type: object
      coins:
        type: integer
      inventory:
        items:
          properties:
            quantity:
              type: integer
            type:
              $ref: '#/definitions/db.Merch'
          type: object
        type: array
    type: object
  db.Merch:
    enum:
    - t-shirt
    - cup
    - book
    - pen
    - powerbank
    - hoody
    - umbrella
    - socks
    - wallet
    - pink-hoody
    type: string
    x-enum-varnames:
    - TShirt
    - Cup
    - Book
    - Pen
    - Powerbank
    - Hoody
    - Umbrella
    - Socks
    - Wallet
    - PinkHoody
  db.SendCoinRequest:
    properties:
      amount:
        type: integer
      toUser:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: mr.kosheef54@gmail.com
    name: API Support
  description: API for inner Avito merch shop.
  title: Avito-shop API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя для дальнейшего использования сервиса
      operationId: auth
      parameters:
      - description: Данные для аутентификации.
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/db.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Аутентификация и получение JWT-токена.
          schema:
            $ref: '#/definitions/db.AuthResponse'
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
      summary: Аутентификация и получение JWT-токена.
      tags:
      - auth
  /buy/{item}:
    get:
      consumes:
      - application/json
      description: Купить предмет за монеты.
      operationId: buy-item
      parameters:
      - description: Название предмета.
        enum:
        - t-shirt
        - cup
        - book
        - pen
        - powerbank
        - hoody
        - umbrella
        - socks
        - wallet
        - pink-hoody
        in: path
        name: item
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            type: string
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
      summary: Купить предмет за монеты.
      tags:
      - items
  /info:
    get:
      description: Получить информацию о монетах, инвентаре и истории транзакций авторизированного
        сотрудника.
      operationId: info
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/db.InfoResponse'
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
      summary: Получить информацию о монетах, инвентаре и истории транзакций.
      tags:
      - info
  /sendCoin:
    post:
      consumes:
      - application/json
      description: Отправить монеты указанному пользователю.
      operationId: send-coins
      parameters:
      - description: Данные о пользователе и количестве монет.
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/db.SendCoinRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            type: string
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/db.ErrorResponse'
      summary: Отправить монеты другому пользователю.
      tags:
      - coins
schemes:
- http
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
